part of '${cubit_snake_case}_cubit.dart';

abstract class ${cubit_pascal_case}State extends Equatable {
  const ${cubit_pascal_case}State();

  @override
    List<Object> get props => [];
}

class ${cubit_pascal_case}InitialState extends ${cubit_pascal_case}State { }

class ${cubit_pascal_case}LoadingState extends ${cubit_pascal_case}State { }

class ${cubit_pascal_case}LoadedState extends ${cubit_pascal_case}State {
    final data;

    ${cubit_pascal_case}LoadedState(this.data);

    @override
    List<Object> get props => [data];
}

class ${cubit_pascal_case}ErrorState extends ${cubit_pascal_case}State {
    final error;

    ${cubit_pascal_case}ErrorState(this.error);

    @override
    List<Object> get props => [error];
}
